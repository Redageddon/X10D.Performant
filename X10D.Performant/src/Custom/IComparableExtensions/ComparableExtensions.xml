<members>
    <member name="Between">
        <summary>
            Determines if <paramref name="value"/> is between <paramref name="lower"/> and <paramref name="upper"/>.
        </summary>
        <param name="value">The value to compare.</param>
        <param name="lower">The exclusive lower bound.</param>
        <param name="upper">The exclusive upper bound.</param>
        <typeparam name="T">The comparable type.</typeparam>
        <returns><see langword="true"/> if <paramref name="value"/> is between the bounds, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="Clamp">
        <summary>
            Returns the current value clamped to the inclusive range of <paramref name="lower"/> and <paramref name="upper"/>.
        </summary>
        <param name="value">The value to be clamped.</param>
        <param name="lower">The lower bound of the result.</param>
        <param name="upper">The upper bound of the result.</param>
        <typeparam name="T">An <see cref="T:System.IComparable"/> type.</typeparam>
        <returns>
            <paramref name="value"/> if <paramref name="lower"/> ≤ <paramref name="value"/> ≤ <paramref name="upper"/>.
            -or-
            <paramref name="lower"/> if <paramref name="value"/> &lt; <paramref name="lower"/>.
            -or-
            <paramref name="upper"/> if <paramref name="upper"/> &lt; <paramref name="value"/>.
        </returns>
    </member>
    <member name="GreaterThan">
        <summary>
            Determines if the current value is greater than another value.
        </summary>
        <param name="value">The first value.</param>
        <param name="other">The second value.</param>
        <typeparam name="T1">An <see cref="T:System.IComparable`1"/> type.</typeparam>
        <typeparam name="T2">The comparison operand type.</typeparam>
        <returns>
            <see langword="true"/> if <paramref name="value"/> is greater than <paramref name="other"/>
            -or-
            <see langword="false"/> otherwise.
        </returns>
    </member>
    <member name="LessThan">
        <summary>
            Determines if the current value is less than another value.
        </summary>
        <param name="value">The first value.</param>
        <param name="other">The second value.</param>
        <typeparam name="T1">An <see cref="T:System.IComparable`1"/> type.</typeparam>
        <typeparam name="T2">The comparison operand type.</typeparam>
        <returns>
            <see langword="true"/> if <paramref name="value"/> is less than <paramref name="other"/>
            -or-
            <see langword="false"/> otherwise.
        </returns>
    </member>
    <member name="Max">
        <summary>
            Returns the maximum of two values.
        </summary>
        <param name="value">The first value.</param>
        <param name="other">The second value.</param>
        <typeparam name="T">A type which implements <see cref="T:System.IComparable`1"/>.</typeparam>
        <returns>
            <paramref name="value"/> if <paramref name="value"/> is greater than <paramref name="other"/>
            -or-
            <paramref name="other"/> otherwise.
        </returns>
    </member>
    <member name="Min">
        <summary>
            Returns the minimum of two values.
        </summary>
        <param name="value">The first value.</param>
        <param name="other">The second value.</param>
        <typeparam name="T">A type which implements <see cref="T:System.IComparable`1"/>.</typeparam>
        <returns>
            <paramref name="value"/> if <paramref name="value"/> is less than <paramref name="other"/>
            -or-
            <paramref name="other"/> otherwise.
        </returns>
    </member>
    <member name="Outside">
        <summary>
            Determines if <paramref name="value"/> is outside of <paramref name="lower"/> and <paramref name="upper"/>.
        </summary>
        <param name="value">The value to compare.</param>
        <param name="lower">The exclusive lower bound.</param>
        <param name="upper">The exclusive upper bound.</param>
        <typeparam name="T">The comparable type.</typeparam>
        <returns><see langword="true"/> if <paramref name="value"/> is out of the bounds, <see langword="false"/> otherwise.</returns>
    </member>
</members>