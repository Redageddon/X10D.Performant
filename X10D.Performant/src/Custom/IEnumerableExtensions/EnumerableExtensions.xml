<members>
    <member name="Consume">
        <summary>
            Consumes all elements in an <see cref="IEnumerable{T}"/>.
        </summary>
        <param name="values">The values being consumed and ignored.</param>
        <param name="consumeCount">The amount to consume up to.</param>
        <typeparam name="TSource">Any type.</typeparam>
    </member>        
    <member name="DistinctBy">
        <summary>
            Gets each unique object from <paramref name="values"/> determined by <paramref name="selector"/> and compared with 
            <see cref="Comparer{T}"/>if passed.
        </summary>
        <param name="values">The initial values being iterated through.</param>
        <param name="selector">The function that determines whether an element in <paramref name="values"/> should be returned.</param>
        <param name="comparer">Passes a generic <see cref="IEqualityComparer{T}"/>.</param>
        <typeparam name="TSource">The type of the contained element in the <paramref name="values"/> being read from.</typeparam>
        <typeparam name="TKey">The type being selected distinctly from.</typeparam>
        <returns>A collection of values that are specific to a selector.</returns>
    </member>    
    <member name="ForEach0">
        <summary>
            Does an action with an input on every lazy evaluation.
        </summary>
        <param name="values">The values to iterate through.</param>
        <param name="action">The single parameter <see cref="Action{T}"/> to execute for each item in <paramref name="values"/>.</param>
        <typeparam name="TSource">Any type.</typeparam>
        <returns>The same values from <paramref name="values"/>.</returns>
    </member>    
    <member name="ForEach1">
        <summary>
            Does an action with an input on every lazy evaluation.
        </summary>
        <param name="values">The values to iterate through.</param>
        <param name="action">The parameterless <see cref="Action"/> to execute for each item in <paramref name="values"/>.</param>
        <typeparam name="TSource">Any type.</typeparam>
        <returns>The same values from <paramref name="values"/>.</returns>
    </member>
    <member name="SelectWhere">
        <summary>
            Combines Select and Where into a single statement for efficiency.
        </summary>
        <param name="values">The values to iterate over.</param>
        <param name="predicate">Determines whether the current value is going to be selected.</param>
        <param name="selector">Changes the current value in some way.</param>
        <typeparam name="TSource">Any type.</typeparam>
        <returns>An <see cref="IEnumerable{T}"/> of type <typeparamref name="TSource"/>.</returns>
    </member>
</members>