<members>
    <member name="AsReadOnly">
        <summary>
            Converts a <see cref="Span{T}"/> to a <see cref="ReadOnlySpan{T}"/> in a more explicit way.
        </summary>
        <param name="values">The initial values.</param>
        <typeparam name="T">Any type.</typeparam>
        <returns>A read only version of <paramref name="values"/>.</returns>
    </member>   
    <member name="RandomReadOnly">
        <summary>
            Fills a buffer randomly with values found in <paramref name="buffer"/>.
        </summary>
        <param name="values">The values being pulled.</param>
        <param name="buffer">The buffer being filled.</param>
        <param name="random">The <see cref="System.Random"/> instance.</param>
        <typeparam name="T">Any type.</typeparam>
    </member>
    <member name="Shuffled">
        <summary>
            Shuffles a <see cref="ReadOnlySpan{T}"/>.
        </summary>
        <param name="values">The <see cref="Span{T}"/> to shuffle.</param>
        <param name="random">The <see cref="System.Random"/> instance.</param>
        <typeparam name="T">Any type.</typeparam>
    </member>
    <member name="RandomNew">
        <summary>
            Generates a new random <see cref="Span{T}"/> by filling it with values found in <see param="values"/>.
        </summary>
        <param name="values">The values being pulled.</param>
        <param name="count">The amount of items to be returned.</param>
        <param name="random">The <see cref="System.Random"/> instance.</param>
        <typeparam name="T">Any type.</typeparam>
        <returns>A <see cref="Span{T}"/> containing <paramref name="count"/> amount of <typeparamref name="T"/>.</returns>
    </member>
    <member name="Shuffle">
        <summary>
            Shuffles a <see cref="Span{T}"/>.
        </summary>
        <param name="values">The <see cref="Span{T}"/> to shuffle.</param>
        <param name="random">The <see cref="System.Random"/> instance.</param>
        <typeparam name="T">Any type.</typeparam>
    </member>
    <member name="Swap">
        <summary>
            Swaps 2 values in an array.
        </summary>
        <param name="values">The values being read from.</param>
        <param name="firstIndex">The index of the first value to be swapped.</param>
        <param name="secondIndex">The index of the second value to be swapped.</param>
        <typeparam name="T">Any type.</typeparam>
    </member>
</members>